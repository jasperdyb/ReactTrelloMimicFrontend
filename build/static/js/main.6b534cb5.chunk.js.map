{"version":3,"sources":["dnd/constants.js","components/Todo.component.jsx","components/TodoDragPreview.component.jsx","dnd/customDragLayer.jsx","components/DraggableTodo.component.jsx","components/TodoListHeader.component.jsx","components/TodoListFooter.component.jsx","components/NewTodoInput.component.jsx","components/QuickTodoEditOptions.component.jsx","components/QuickTodoEditTextarea.component.jsx","components/QuickTodoEdit.component.jsx","graphQL/queries.js","graphQL/mutations.js","components/TodoList.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ItemTypes","Todo","React","forwardRef","targetRef","todo","index","setQuickEditStates","isDragging","hideOnDrag","isDragOver","quickTodoEditRef","useState","isOver","setIsOver","handleClick","e","preventDefault","current","getBoundingClientRect","top","left","width","show","dimensions","value","name","propTypes","PropTypes","object","number","bool","func","TodoDragPreview","styles","transform","WebkitTransform","height","layerStyles","position","pointerEvents","zIndex","getItemStyles","initialOffset","currentOffset","display","x","y","CustomDragLayer","useDragLayer","monitor","item","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","style","renderItem","DraggableTodo","handleMoveTodo","setHideOnDrag","useRef","refDimensions","setRefDimensions","isDraggingElement","setIsDraggingElement","useDrag","type","begin","setTimeout","end","collect","drag","preview","useDrop","accept","drop","canDrop","hover","useEffect","getEmptyImage","captureDraggingState","offsetWidth","offsetHeight","propsToTodo","TodoListHeader","title","isOverOnTop","TodoListFooter","listLength","showNewTodo","handleShowNewTodo","handlePreventNewTodoOnBlur","handleAddNewTodo","isOverOnBottom","string","NewTodoInput","focusRef","handleNewTodoOnBlur","setNewTodo","useLayoutEffect","focus","event","target","QuickTodoEditOptions","handleDeleteTodo","QuickTodoEditTextarea","quickEditStates","editedTodo","setEditedTodo","handleUpdateTodo","margin","stopPropagation","select","QuickTodoEdit","propsToQuickTodoEditTextarea","queries","GET_TODO_LIST","gql","mutations","ADD_TODO","UPDATE_TODO_NAME","UPDATE_LIST_ORDER","DELETE_TODO","TodoList","todoItems","setShowNewTodo","newTodo","useMutation","update","cache","addTodo","data","list","readQuery","query","writeQuery","concat","updateTodoName","deleteTodo","filter","id","updateListOrder","newTodoInputRef","hideNewTodo","fromTodo","toIndex","dropArea","a","newTodoOrder","map","fromIndex","movedTodo","splice","tails","order","variables","newOrder","AddNewTodo","length","newTodoName","Todos","propsToTodoListHeader","propsToTodoListFooter","propsToNewTodoInput","propsToQuickTodoEdit","array","App","useQuery","loading","error","message","console","log","Boolean","window","location","hostname","match","client","ApolloClient","uri","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6b534cb5.chunk.js","sourcesContent":["export const ItemTypes = {\r\n  TODO: \"todo\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../css/Todo.css\";\r\n\r\nconst Todo = React.forwardRef(\r\n  (\r\n    {\r\n      todo,\r\n      index,\r\n      isDragging,\r\n      hideOnDrag,\r\n      isDragOver,\r\n      setQuickEditStates,\r\n      quickTodoEditRef,\r\n    },\r\n    targetRef\r\n  ) => {\r\n    const [isOver, setIsOver] = useState(false);\r\n\r\n    const handleClick = (e) => {\r\n      e.preventDefault();\r\n\r\n      const { top, left, width } = targetRef.current.getBoundingClientRect();\r\n      setQuickEditStates({\r\n        show: true,\r\n        dimensions: {\r\n          top: top,\r\n          left: left,\r\n          width: width,\r\n        },\r\n        value: todo.name,\r\n        index,\r\n      });\r\n    };\r\n\r\n    //TODO 預設預覽: todo原位顯示灰色塊\r\n\r\n    function handleOnOver() {\r\n      setIsOver(true);\r\n    }\r\n\r\n    function handleOnLeave() {\r\n      setIsOver(false);\r\n    }\r\n\r\n    return pug`\r\n      div.btn.d-flex.todo-item(ref=targetRef onMouseEnter =handleOnOver onMouseLeave=handleOnLeave) \r\n        div.text-left.mb-1.todo-text #{todo.name}\r\n        if isOver \r\n          button.edit.mr-1( onClick=handleClick onContextMenu=handleClick)\r\n            FontAwesomeIcon(icon=faPencilAlt)\r\n  `;\r\n  }\r\n);\r\n\r\nTodo.propTypes = {\r\n  todo: PropTypes.object,\r\n  index: PropTypes.number,\r\n  isDragging: PropTypes.bool,\r\n  hideOnDrag: PropTypes.bool,\r\n  isDragOver: PropTypes.bool,\r\n  setQuickEditStates: PropTypes.func,\r\n  quickTodoEditRef: PropTypes.object,\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo.component\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TodoDragPreview({ todo, width, height }) {\r\n  const styles = {\r\n    transform: \"rotate(5deg)\",\r\n    WebkitTransform: \"rotate(5deg)\",\r\n    width: width,\r\n    height: height,\r\n  };\r\n\r\n  return pug`\r\n    div(style=styles)\r\n      Todo(todo=todo)\r\n  `;\r\n}\r\n\r\nTodoDragPreview.propTypes = {\r\n  todo: PropTypes.object,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\nimport { ItemTypes } from \"./constants\";\r\nimport TodoDragPreview from \"../components/TodoDragPreview.component\";\r\n\r\nconst layerStyles = {\r\n  position: \"fixed\",\r\n  pointerEvents: \"none\",\r\n  zIndex: 100,\r\n  left: 0,\r\n  top: 0,\r\n};\r\n\r\nfunction getItemStyles(initialOffset, currentOffset) {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: \"none\",\r\n    };\r\n  }\r\n  let { x, y } = currentOffset;\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n}\r\n\r\nconst CustomDragLayer = () => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    item,\r\n    initialOffset,\r\n    currentOffset,\r\n  } = useDragLayer((monitor) => ({\r\n    item: monitor.getItem(),\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging(),\r\n  }));\r\n  function renderItem() {\r\n    switch (itemType) {\r\n      case ItemTypes.TODO:\r\n        return pug`\r\n          TodoDragPreview(todo=item.todo width=item.width height=item.height)\r\n        `;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div style={layerStyles}>\r\n      <div style={getItemStyles(initialOffset, currentOffset)}>\r\n        {renderItem()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CustomDragLayer;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Todo from \"./Todo.component\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ItemTypes } from \"../dnd/constants.js\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\r\n\r\nexport default function DraggableTodo({\r\n  todo,\r\n  index,\r\n  handleMoveTodo,\r\n  hideOnDrag,\r\n  setHideOnDrag,\r\n  setQuickEditStates,\r\n  quickTodoEditRef,\r\n}) {\r\n  const targetRef = useRef();\r\n  const [refDimensions, setRefDimensions] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n  const [isDraggingElement, setIsDraggingElement] = useState(false);\r\n\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: {\r\n      type: ItemTypes.TODO,\r\n      todo,\r\n      index,\r\n      width: refDimensions.width,\r\n      height: refDimensions.height,\r\n    },\r\n    begin: () => {\r\n      // Call isDragging to dismount drag source will cause browser fire endDrag right away,\r\n      // so use an extra state to control.\r\n      setTimeout(() => {\r\n        setIsDraggingElement(true);\r\n      }, 10);\r\n    },\r\n    end: () => {\r\n      setIsDraggingElement(false);\r\n      setHideOnDrag(false);\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [{ isDragOver, item, canDrop }, drop] = useDrop({\r\n    accept: ItemTypes.TODO,\r\n    drop: (todo) => {\r\n      setIsDraggingElement(false);\r\n      handleMoveTodo(todo, index, \"middle\");\r\n      setRefDimensions({\r\n        width: todo.width,\r\n        height: todo.height,\r\n      });\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragOver: !!monitor.isOver(),\r\n      item: monitor.getItem(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n    hover: () => {\r\n      setHideOnDrag(canDrop);\r\n    },\r\n    canDrop: (todo) => todo.index !== index,\r\n  });\r\n\r\n  //clear default drag preview\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), {\r\n      captureDraggingState: true,\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  //update drag source dimension\r\n  useEffect(() => {\r\n    if (targetRef.current) {\r\n      setRefDimensions({\r\n        width: targetRef.current.offsetWidth,\r\n        height: targetRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [todo]);\r\n\r\n  const handleOnHover = () => {};\r\n\r\n  const handleOnLeave = () => {};\r\n\r\n  if (isDraggingElement) {\r\n    if (hideOnDrag) {\r\n      return pug`\r\n        div\r\n      `;\r\n    }\r\n\r\n    return pug`\r\n      div.p-2.pb-0\r\n        span.btn.d-flex.todo-blank(style={\r\n            height:item.height\r\n          }) \r\n        `;\r\n  }\r\n  //TODO fix: element -1 index will become isHover and show edit icon\r\n\r\n  const propsToTodo = {\r\n    todo,\r\n    index,\r\n    isDragging,\r\n    hideOnDrag,\r\n    isDragOver,\r\n    setQuickEditStates,\r\n    quickTodoEditRef,\r\n  };\r\n\r\n  return pug`\r\n    div(ref=drop)\r\n      div.p-2\r\n        div(ref=drag onMouseOver=handleOnHover onMouseLeave = handleOnLeave)\r\n          Todo(ref=targetRef  ...propsToTodo )\r\n\r\n      if isDragOver && canDrop\r\n        div.p-2.pb-0\r\n          span.btn.d-flex.todo-blank(style={\r\n            height:item.height\r\n          }) \r\n  `;\r\n}\r\n\r\nDraggableTodo.propTypes = {\r\n  todo: PropTypes.object,\r\n  index: PropTypes.number,\r\n  handleMoveTodo: PropTypes.func,\r\n  hideOnDrag: PropTypes.bool,\r\n  setHideOnDrag: PropTypes.func,\r\n  setQuickEditStates: PropTypes.func,\r\n  quickTodoEditRef: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ItemTypes } from \"../dnd/constants.js\";\r\nimport { useDrop } from \"react-dnd\";\r\n\r\nexport default function TodoListHeader({\r\n  title,\r\n  handleMoveTodo,\r\n\r\n  setHideOnDrag,\r\n}) {\r\n  const [{ isOverOnTop, item, canDrop }, drop] = useDrop({\r\n    accept: ItemTypes.TODO,\r\n    drop: (todo) => handleMoveTodo(todo, 0, \"top\"),\r\n    collect: (monitor) => ({\r\n      isOverOnTop: !!monitor.isOver(),\r\n      item: monitor.getItem(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n    hover: () => {\r\n      setHideOnDrag(canDrop);\r\n    },\r\n    canDrop: (todo) => todo.index !== 0,\r\n  });\r\n\r\n  return pug`\r\n    div(ref=drop)\r\n      .card-header\r\n        h5.card-title #{title}\r\n      \r\n      if isOverOnTop && canDrop\r\n        .card-body.p-2\r\n          span.btn.d-flex.todo-blank(href=\"#\" style={\r\n            height:item.height\r\n          }) \r\n    `;\r\n}\r\n\r\nTodoListHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  handleMoveTodo: PropTypes.func,\r\n  setHideOnDrag: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ItemTypes } from \"../dnd/constants.js\";\r\nimport { useDrop } from \"react-dnd\";\r\n\r\nexport default function TodoListFooter({\r\n  listLength,\r\n  handleMoveTodo,\r\n  setHideOnDrag,\r\n  showNewTodo,\r\n  handleShowNewTodo,\r\n  handlePreventNewTodoOnBlur,\r\n  handleAddNewTodo,\r\n}) {\r\n  const [{ isOverOnBottom, item, canDrop }, drop] = useDrop({\r\n    accept: ItemTypes.TODO,\r\n    drop: (todo) => handleMoveTodo(todo, -1, \"bottom\"),\r\n    collect: (monitor) => ({\r\n      isOverOnBottom: !!monitor.isOver(),\r\n      item: monitor.getItem(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n    hover: () => {\r\n      setHideOnDrag(canDrop);\r\n    },\r\n    canDrop: (todo) => todo.index !== listLength - 1,\r\n  });\r\n\r\n  return pug`\r\n    div(ref=drop)\r\n      if isOverOnBottom  && canDrop\r\n        .card-body.p-2\r\n          span.btn.d-flex.todo-blank( style={\r\n            height:item.height\r\n          })   \r\n\r\n      .card-footer\r\n        if !showNewTodo\r\n          button.btn.btn-light(onClick=handleShowNewTodo) + Add todo\r\n\r\n        else\r\n          button.btn.btn-success(\r\n            onMouseDown=handlePreventNewTodoOnBlur \r\n            onClick=handleAddNewTodo\r\n            ) New todo\r\n    `;\r\n}\r\n\r\nTodoListFooter.propTypes = {\r\n  listLength: PropTypes.number,\r\n  handleMoveTodo: PropTypes.func,\r\n  setHideOnDrag: PropTypes.func,\r\n  showNewTodo: PropTypes.bool,\r\n  handleShowNewTodo: PropTypes.func,\r\n  handlePreventNewTodoOnBlur: PropTypes.func,\r\n  handleAddNewTodo: PropTypes.func,\r\n};\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NewTodoInput = React.forwardRef(\r\n  ({ handleNewTodoOnBlur, setNewTodo }, focusRef) => {\r\n    // const focusRef = useRef(null);\r\n\r\n    useLayoutEffect(() => {\r\n      focusRef.current.focus();\r\n    }, [focusRef]);\r\n\r\n    const handleOnChange = (event) => {\r\n      setNewTodo(event.target.value);\r\n    };\r\n\r\n    return pug`\r\n      div.p-2.input-group\r\n        textarea.form-control(name=\"new\" ref=focusRef onBlur=handleNewTodoOnBlur onChange=handleOnChange )\r\n  `;\r\n  }\r\n);\r\n\r\nNewTodoInput.propTypes = {\r\n  handleNewTodoOnBlur: PropTypes.func,\r\n  setNewTodo: PropTypes.func,\r\n};\r\n\r\nexport default NewTodoInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../css/QuickTodoEditOptions.css\";\r\n\r\nexport default function QuickTodoEditOptions({ index, handleDeleteTodo }) {\r\n  return pug`\r\n    div.options\r\n      ul.p-1\r\n        li\r\n          button.option-button(onClick=(e)=>handleDeleteTodo(index)) Delete\r\n  `;\r\n}\r\n\r\nQuickTodoEditOptions.propTypes = {\r\n  index: PropTypes.number,\r\n  handleDeleteTodo: PropTypes.func,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport QuickTodoEditOptions from \"./QuickTodoEditOptions.component\";\r\nimport \"../css/QuickTodoEditTextarea.css\";\r\n\r\nconst QuickTodoEditTextarea = React.forwardRef(\r\n  (\r\n    {\r\n      quickEditStates,\r\n      editedTodo,\r\n      setEditedTodo,\r\n      handleUpdateTodo,\r\n      handleDeleteTodo,\r\n    },\r\n    focusRef\r\n  ) => {\r\n    const styles = {\r\n      position: \"relative\",\r\n      margin: 0,\r\n      ...quickEditStates.dimensions,\r\n    };\r\n\r\n    useEffect(() => {\r\n      setEditedTodo(quickEditStates.value);\r\n\r\n      focusRef.current.focus();\r\n    }, [setEditedTodo, quickEditStates, focusRef]);\r\n\r\n    const handleOnFocus = (event) => {\r\n      const target = event.target;\r\n      setTimeout(() => target.select(), 0); //make select async\r\n    };\r\n\r\n    const handleOnChange = (event) => {\r\n      setEditedTodo(event.target.value);\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n      handleUpdateTodo(quickEditStates.index, editedTodo);\r\n    };\r\n\r\n    function handleChildClick(e) {\r\n      e.stopPropagation();\r\n    }\r\n\r\n    return pug`\r\n      #quickTodoEditTextarea(style=styles onClick=handleChildClick)\r\n        div.textarea-size\r\n          textarea.form-control(ref=focusRef \r\n            value = editedTodo\r\n            onFocus=handleOnFocus \r\n            onChange=handleOnChange)\r\n            \r\n        button.btn.btn-success.mt-2.save-button(onClick =handleClick) Save\r\n        QuickTodoEditOptions(index=quickEditStates.index handleDeleteTodo=handleDeleteTodo)\r\n    `;\r\n  }\r\n);\r\n\r\nQuickTodoEditTextarea.propTypes = {\r\n  quickEditStates: PropTypes.object,\r\n  editedTodo: PropTypes.string,\r\n  setEditedTodo: PropTypes.func,\r\n  handleUpdateTodo: PropTypes.func,\r\n  handleDeleteTodo: PropTypes.func,\r\n};\r\n\r\nexport default QuickTodoEditTextarea;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport QuickTodoEditTextarea from \"./QuickTodoEditTextarea.component\";\r\nimport \"../css/QuickTodoEdit.css\";\r\n\r\nconst QuickTodoEdit = React.forwardRef(\r\n  (\r\n    { quickEditStates, setQuickEditStates, handleUpdateTodo, handleDeleteTodo },\r\n    focusRef\r\n  ) => {\r\n    const [editedTodo, setEditedTodo] = useState(\"\");\r\n\r\n    const propsToQuickTodoEditTextarea = {\r\n      quickEditStates,\r\n      editedTodo,\r\n      setEditedTodo,\r\n      handleUpdateTodo,\r\n      handleDeleteTodo,\r\n    };\r\n\r\n    function handleClick(e) {\r\n      handleUpdateTodo(quickEditStates.index, editedTodo);\r\n    }\r\n\r\n    return pug`\r\n      #quickTodoEdit(onClick=handleClick)\r\n        QuickTodoEditTextarea(ref=focusRef ...propsToQuickTodoEditTextarea )\r\n      `;\r\n  }\r\n);\r\n\r\nQuickTodoEdit.propTypes = {\r\n  quickEditStates: PropTypes.object,\r\n  setQuickEditStates: PropTypes.func,\r\n  handleUpdateTodo: PropTypes.func,\r\n  handleDeleteTodo: PropTypes.func,\r\n};\r\n\r\nexport default QuickTodoEdit;\r\n","import gql from \"graphql-tag\";\r\n// import { useQuery } from \"@apollo/react-hooks\";\r\n\r\nconst queries = {\r\n  GET_TODO_LIST: gql`\r\n    {\r\n      list {\r\n        id\r\n        name\r\n        order\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\nexport default queries;\r\n","import gql from \"graphql-tag\";\r\n// import { useMutation } from \"@apollo/react-hooks\";\r\n\r\nconst mutations = {\r\n  ADD_TODO: gql`\r\n    mutation AddTodo($name: String!, $order: Int!) {\r\n      addTodo(name: $name, order: $order) {\r\n        id\r\n        name\r\n        order\r\n      }\r\n    }\r\n  `,\r\n  UPDATE_TODO_NAME: gql`\r\n    mutation UpdateTodoName($id: ID!, $name: String!) {\r\n      updateTodoName(id: $id, name: $name) {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  `,\r\n  UPDATE_LIST_ORDER: gql`\r\n    mutation UpdateListOrder($newOrder: [Order!]!) {\r\n      updateListOrder(newOrder: $newOrder) {\r\n        id\r\n        order\r\n        name\r\n        finished\r\n      }\r\n    }\r\n  `,\r\n  DELETE_TODO: gql`\r\n    mutation DeleteTodo($id: ID!) {\r\n      deleteTodo(id: $id) {\r\n        id\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\nexport default mutations;\r\n","import React, { useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DraggableTodo from \"./DraggableTodo.component\";\r\nimport TodoListHeader from \"./TodoListHeader.component\";\r\nimport TodoListFooter from \"./TodoListFooter.component\";\r\nimport NewTodoInput from \"./NewTodoInput.component\";\r\nimport QuickTodoEdit from \"./QuickTodoEdit.component\";\r\nimport { ItemTypes } from \"../dnd/constants.js\";\r\nimport { useDrop } from \"react-dnd\";\r\n\r\n//GraphQL\r\nimport queries from \"../graphQL/queries.js\";\r\nimport mutations from \"../graphQL/mutations.js\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nexport default function TodoList({ todoItems }) {\r\n  // const [todoItems, setTodoItems] = useState(props.todoItems);\r\n  const [hideOnDrag, setHideOnDrag] = useState(false);\r\n  const [showNewTodo, setShowNewTodo] = useState(false);\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [quickEditStates, setQuickEditStates] = useState({\r\n    show: false,\r\n    dimensions: { top: 0, left: 0, width: 0 },\r\n    value: \"\",\r\n    index: -1,\r\n  });\r\n\r\n  // graphQL hooks\r\n  const [addTodo] = useMutation(mutations.ADD_TODO, {\r\n    update(cache, { data: { addTodo } }) {\r\n      const { list } = cache.readQuery({ query: queries.GET_TODO_LIST });\r\n      cache.writeQuery({\r\n        query: queries.GET_TODO_LIST,\r\n        data: { list: list.concat([addTodo]) },\r\n      });\r\n    },\r\n  });\r\n  const [updateTodoName] = useMutation(mutations.UPDATE_TODO_NAME);\r\n  const [deleteTodo] = useMutation(mutations.DELETE_TODO, {\r\n    update(cache, { data: { deleteTodo } }) {\r\n      const { list } = cache.readQuery({ query: queries.GET_TODO_LIST });\r\n      cache.writeQuery({\r\n        query: queries.GET_TODO_LIST,\r\n        data: { list: list.filter((todo) => todo.id !== deleteTodo.id) },\r\n      });\r\n    },\r\n  });\r\n  const [updateListOrder] = useMutation(mutations.UPDATE_LIST_ORDER, {\r\n    update(cache, { data: { updateListOrder } }) {\r\n      cache.writeQuery({\r\n        query: queries.GET_TODO_LIST,\r\n        data: { list: updateListOrder },\r\n      });\r\n    },\r\n  });\r\n\r\n  const newTodoInputRef = useRef(null);\r\n  const quickTodoEditRef = useRef(null);\r\n\r\n  let hideNewTodo = true;\r\n\r\n  // eslint-disable-next-line\r\n  const [{}, drop] = useDrop({\r\n    accept: ItemTypes.TODO,\r\n    drop: (todo) => {\r\n      setHideOnDrag(false);\r\n    },\r\n  });\r\n\r\n  async function handleMoveTodo(fromTodo, toIndex, dropArea) {\r\n    let newTodoOrder = todoItems.map((todo) => todo.id);\r\n    const fromIndex = fromTodo.index;\r\n    const movedTodo = newTodoOrder.splice(fromIndex, 1);\r\n\r\n    switch (dropArea) {\r\n      case \"top\":\r\n        newTodoOrder = movedTodo.concat(newTodoOrder);\r\n        break;\r\n      case \"bottom\":\r\n        newTodoOrder = newTodoOrder.concat(movedTodo);\r\n        break;\r\n      default:\r\n        let tails = [];\r\n        if (fromIndex < toIndex) {\r\n          tails = newTodoOrder.splice(toIndex);\r\n        } else {\r\n          tails = newTodoOrder.splice(toIndex + 1);\r\n        }\r\n\r\n        newTodoOrder = newTodoOrder.concat(movedTodo).concat(tails);\r\n    }\r\n\r\n    newTodoOrder = newTodoOrder.map((id, index) => ({\r\n      id: id,\r\n      order: index,\r\n    }));\r\n\r\n    await updateListOrder({ variables: { newOrder: newTodoOrder } });\r\n  }\r\n\r\n  function handleShowNewTodo() {\r\n    setShowNewTodo(true);\r\n  }\r\n\r\n  async function AddNewTodo() {\r\n    await addTodo({ variables: { name: newTodo, order: todoItems.length } });\r\n\r\n    setNewTodo(\"\");\r\n    hideNewTodo = true;\r\n    setShowNewTodo(false);\r\n  }\r\n\r\n  function handleAddNewTodo() {\r\n    if (newTodo) {\r\n      AddNewTodo();\r\n    } else {\r\n      newTodoInputRef.current.focus();\r\n      hideNewTodo = true;\r\n    }\r\n  }\r\n\r\n  async function handleUpdateTodo(index, newTodoName) {\r\n    if (todoItems[index] !== newTodoName && newTodoName) {\r\n      const id = todoItems[index].id;\r\n\r\n      await updateTodoName({ variables: { id, name: newTodoName } });\r\n\r\n      setQuickEditStates({\r\n        ...quickEditStates,\r\n        value: \"\",\r\n      });\r\n    }\r\n\r\n    setQuickEditStates({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  async function handleDeleteTodo(index) {\r\n    const id = todoItems[index].id;\r\n\r\n    await deleteTodo({ variables: { id } });\r\n\r\n    setQuickEditStates({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  //fire before onBlur to prevent setShowNewTodo(false)\r\n  function handlePreventNewTodoOnBlur() {\r\n    hideNewTodo = false;\r\n  }\r\n\r\n  function handleNewTodoOnBlur() {\r\n    if (newTodo) {\r\n      AddNewTodo();\r\n    } else if (hideNewTodo) {\r\n      setShowNewTodo(false);\r\n    }\r\n  }\r\n\r\n  function handleDragLeave(e) {\r\n    setHideOnDrag(false);\r\n  }\r\n\r\n  const Todos = todoItems.map((todo, index) => {\r\n    const propsToTodo = {\r\n      todo,\r\n      index,\r\n      handleMoveTodo,\r\n      hideOnDrag,\r\n      setHideOnDrag,\r\n      setQuickEditStates,\r\n      quickTodoEditRef,\r\n    };\r\n    return pug`\r\n      DraggableTodo(key=todo.order ...propsToTodo ) \r\n    `;\r\n  });\r\n\r\n  const propsToTodoListHeader = {\r\n    handleMoveTodo,\r\n    setHideOnDrag,\r\n  };\r\n  const propsToTodoListFooter = {\r\n    listLength: todoItems.length,\r\n    handleMoveTodo,\r\n    setHideOnDrag,\r\n    showNewTodo,\r\n    handleShowNewTodo,\r\n    handlePreventNewTodoOnBlur,\r\n    handleAddNewTodo,\r\n  };\r\n  const propsToNewTodoInput = {\r\n    handleNewTodoOnBlur,\r\n    setNewTodo,\r\n  };\r\n  const propsToQuickTodoEdit = {\r\n    quickEditStates,\r\n    setQuickEditStates,\r\n    handleUpdateTodo,\r\n    handleDeleteTodo,\r\n  };\r\n\r\n  return pug`\r\n    div\r\n      .d-flex.justify-content-center\r\n        .card.todo-list.p-1(ref =drop onDragLeave=handleDragLeave)\r\n          .div(onDragLeave=(e)=>e.stopPropagation())\r\n            TodoListHeader( title =\"Todo List\" ...propsToTodoListHeader)\r\n            .card-body.p-0\r\n              div #{Todos}\r\n              \r\n              if showNewTodo\r\n                NewTodoInput(ref=newTodoInputRef ...propsToNewTodoInput)\r\n\r\n            TodoListFooter(...propsToTodoListFooter)\r\n\r\n      if quickEditStates.show\r\n        QuickTodoEdit(ref=quickTodoEditRef ...propsToQuickTodoEdit )\r\n    `;\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todoItems: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport \"./css/App.css\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport CustomDragLayer from \"./dnd/customDragLayer\";\r\n\r\n// Components\r\nimport TodoList from \"./components/TodoList.component.jsx\";\r\n\r\n//graphQL\r\nimport queries from \"./graphQL/queries.js\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nconst App = () => {\r\n  const { loading, error, data } = useQuery(queries.GET_TODO_LIST);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error : {error.message}</div>;\r\n\r\n  console.log(error);\r\n\r\n  return pug`\r\n    DndProvider(backend=HTML5Backend)\r\n      CustomDragLayer \r\n      TodoList(todoItems=data.list)\r\n`;\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\n\r\nlet connection = \"https://powerful-savannah-37896.herokuapp.com/graphql\";\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  // 如果不是 production 模式\r\n  connection = \"http://localhost:5000/graphql\";\r\n}\r\n\r\n//Apollo server\r\nconst client = new ApolloClient({\r\n  uri: connection,\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}